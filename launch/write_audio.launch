<launch>

    <!-- input args -->
    <arg name="connect_rf_client" default='false'/>

    <!-- robofleet client group -->
    <group if="$(arg connect_rf_client)" ns="audio_writer_rf_client"> 

        <!--launch robofleet with desired config file-->
        <arg name="rf_cfg" default="$(env HRI_CACTI_XR_PATH)/robofleet/hl-ss-config.yaml"/>
	    <node
	    	name    = "robofleet_client"
	    	pkg     = "robofleet_client"
	    	type    = "client"
	    	output  = "screen"
	    	args	= "$(arg rf_cfg)"
	    />
    </group>

    <group ns="audio_writer">
        <!-- Load parameters from YAML file -->
        <rosparam file="$(find audio_writer)/params/params.yaml" command="load"/>

        <!-- user inputs -->
        <arg name="path" default="$(find audio_writer)/data"/>
        <arg name="name" default="output"/>
        <arg name="topic" default="/hololens/microphone/data"/>
        <arg name="downsample" default="false"/>

        <!-- set params -->
        <param name="output_directory_" value="$(arg path)" />
        <param name="postfix_" value="$(arg name)" />
        <param name="topic_name_" value="$(arg topic)" />
        <param name="queue_size_" value="100"/>
        <param name="downsample_" value="$(arg downsample)"/>

        <param name="start_recording_topic_" value="/hololens/natural_input_capture/start"/>
        <param name="stop_recording_topic_" value="/hololens/natural_input_capture/stop"/>

        <!--launch save_bags node -->
        <node name="save_raw_audio_stream" pkg="audio_writer" type="save_raw_audio_stream" output="screen"/>
    </group>
</launch>